"use client"; // This is required to make the page interactive for the arrows

import { useState, useEffect, useRef } from 'react';
import { getBlogPosts, getTestimonials } from '@/lib/api';
import type { BlogPost, Testimonial } from '@/types';
import BlogCard from '@/components/BlogCard';
import TestimonialCard from '@/components/TestimonialCard';
import { ChevronLeft, ChevronRight } from 'lucide-react';

export default function CommunityPage() {
  const [posts, setPosts] = useState<BlogPost[]>([]);
  const [testimonials, setTestimonials] = useState<Testimonial[]>([]);
  const scrollContainerRef = useRef<HTMLDivElement>(null);
  
  // State to manage if arrows should be enabled or disabled
  const [canScrollLeft, setCanScrollLeft] = useState(false);
  const [canScrollRight, setCanScrollRight] = useState(true);

  // Since this is now a client component, we fetch data using useEffect
  useEffect(() => {
    async function fetchData() {
      const [blogData, testimonialData] = await Promise.all([
        getBlogPosts(),
        getTestimonials()
      ]);
      setPosts(blogData);
      setTestimonials(testimonialData);
    }
    fetchData();
  }, []);

  // This function checks if there's more content to scroll to
  const checkScrollability = () => {
    const el = scrollContainerRef.current;
    if (el) {
      // Check if we can scroll left
      setCanScrollLeft(el.scrollLeft > 0);
      // Check if we can scroll right (with a small buffer for precision)
      setCanScrollRight(el.scrollLeft < el.scrollWidth - el.clientWidth - 1);
    }
  };

  // Set up event listener to check scrollability whenever the user scrolls or posts load
  useEffect(() => {
    const el = scrollContainerRef.current;
    if (el) {
      checkScrollability(); // Initial check
      el.addEventListener('scroll', checkScrollability);
    }
    // Cleanup the event listener when the component is removed
    return () => {
      if (el) {
        el.removeEventListener('scroll', checkScrollability);
      }
    };
  }, [posts]); // Re-run this check when the posts data has loaded

  // Function to handle the arrow button clicks
  const handleScroll = (direction: 'left' | 'right') => {
    const el = scrollContainerRef.current;
    if (el) {
      // Scroll by 80% of the visible width for a nice "paging" effect
      const scrollAmount = direction === 'left' ? -el.clientWidth * 0.8 : el.clientWidth * 0.8;
      el.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    }
  };

  return (
    <div className="bg-gradient-to-br from-gray-50 to-teal-50 min-h-screen">
      {/* Your existing Hero Section - NO CHANGES HERE */}
      <section className="relative bg-gradient-to-br from-teal-800 via-teal-600 to-amber-500 text-white py-24 text-center overflow-hidden">
        <div className="absolute top-0 left-0 w-full h-full">
          <div className="absolute top-20 left-10 w-32 h-32 bg-white/10 rounded-full animate-float"></div>
          <div className="absolute top-40 right-20 w-24 h-24 bg-amber-400/20 rounded-full animate-float" style={{animationDelay: '1s'}}></div>
          <div className="absolute bottom-20 left-20 w-16 h-16 bg-teal-400/20 rounded-full animate-float" style={{animationDelay: '2s'}}></div>
        </div>
        <div className="relative z-10 container mx-auto px-6">
          <div className="animate-fade-in-up">
            <h1 className="text-5xl md:text-6xl font-bold tracking-tight mb-6">Traveler Stories</h1>
            <p className="text-xl text-teal-100 max-w-3xl mx-auto leading-relaxed">
              Dive into authentic experiences, travel tips, and inspiring stories from fellow adventurers who have explored the world with us.
            </p>
          </div>
        </div>
      </section>

      {/* Blog Posts Section - UPDATED WITH ARROWS */}
      <section className="py-20">
        <div className="container mx-auto px-6">
          <div className="flex justify-between items-center mb-16 animate-fade-in-up">
            <div className="text-center lg:text-left">
              <h2 className="text-4xl font-bold text-gray-800 mb-6">From Our Blog</h2>
              <p className="text-lg text-gray-600 max-w-3xl leading-relaxed">
                Discover travel insights, destination guides, and personal stories from our community of adventurers.
              </p>
            </div>
            {/* Arrow Buttons */}
            <div className="hidden lg:flex space-x-4">
              <button 
                onClick={() => handleScroll('left')} 
                disabled={!canScrollLeft}
                className="p-3 rounded-full bg-white shadow-md hover:bg-gray-100 disabled:opacity-30 disabled:cursor-not-allowed transition-all"
                aria-label="Scroll left"
              >
                <ChevronLeft className="w-6 h-6 text-gray-800"/>
              </button>
              <button 
                onClick={() => handleScroll('right')} 
                disabled={!canScrollRight}
                className="p-3 rounded-full bg-white shadow-md hover:bg-gray-100 disabled:opacity-30 disabled:cursor-not-allowed transition-all"
                aria-label="Scroll right"
              >
                <ChevronRight className="w-6 h-6 text-gray-800"/>
              </button>
            </div>
          </div>
          
          {posts.length > 0 ? (
            <div 
              ref={scrollContainerRef}
              className="flex overflow-x-auto space-x-8 pb-8 -mx-6 px-6 scrollbar-hide"
            >
              {posts.map((post: BlogPost, index) => (
                <div 
                  key={post.id} 
                  className="animate-fade-in-up hover-lift"
                  style={{animationDelay: `${index * 0.1}s`}}
                >
                  <BlogCard post={post} />
                </div>
              ))}
            </div>
          ) : (
            // Your existing "Coming Soon" placeholder - NO CHANGES HERE
            <div className="text-center py-20 animate-fade-in-up">
               {/* ...placeholder content... */}
            </div>
          )}
        </div>
      </section>

      {/* Your existing Testimonials Section - NO CHANGES HERE */}
      {testimonials.length > 0 && (
        <section className="relative bg-gradient-to-br from-teal-50 to-amber-50 py-24 overflow-hidden">
          {/* ...testimonials content... */}
        </section>
      )}
    </div>
  );
}

